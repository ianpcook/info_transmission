# -*- coding: utf-8 -*-"""Created on Wed Dec 10 18:14:42 2014@author: ian""""""This file opens the downloaded hearing files, and cleans outthe HTML and other problematic content, then saves them asseparate files."""import osimport fnmatchfrom bs4 import BeautifulSoupimport codecsimport remydir = './data/scraped_hearings/'"""File traversing adapted from:http://stackoverflow.com/questions/2186525/use-a-glob-to-find-files-recursively-in-python"""def find_files(directory, pattern):    for root, dirs, files in os.walk(directory):        for basename in files:            if fnmatch.fnmatch(basename, pattern):                fullpath = os.path.join(root, basename)                yield fullpath# Code below thanks to Joe Espositofilelist = []failed_files = []for filename in list(find_files(mydir, '*.txt')):    # Get text    with codecs.open(filename, 'r', 'utf-8') as f:        try:            content = f.read()        except UnicodeDecodeError:            print 'Skipping non-UTF-8 file:', filename            failed_files.append(filename)            continue    # Convert to text    soup = BeautifulSoup(content.encode('UTF-8')).text    # Reopen and write new text to the file    with codecs.open('./data/clean_hearings_flat/'+os.path.basename(filename), 'w', 'utf-8') as f:        f.write(soup)    # Print to show progress    print len(filelist)    # Add filename to array to be used as first data column    filelist.append(os.path.basename(filename))print 'Done!'if failed_files:    print    print 'Skipped files:'    for failed_file in failed_files:        print failed_file# Clean out extraneous formatting notes and graphics indicatorsimport fileinputchf = './data/clean_hearings_flat/'fileCruft = [    # to be removed from files    re.compile('\[GRAPHIC\]'),    re.compile('\[TIFF OMITTED\]'),    re.compile('\[\[\w+\s+\d+\]\]'),    re.compile('\[GRAPHIC\(S\) NOT AVAILABLE IN TIFF FORMAT\]')]for filename in list(find_files(chf, '*.txt')):    with codecs.open(filename, 'r', 'utf-8') as f:        content = f.read()        for cruft in fileCruft:            content = re.sub(cruft, " ", content)    with codecs.open(filename, 'w', 'utf-8') as f:        f.write(content)    print "Finished cleaning file ", filename